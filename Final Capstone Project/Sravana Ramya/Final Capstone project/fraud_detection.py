# -*- coding: utf-8 -*-
"""Fraud detection

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qoXbIrAzDHESWVd454_jfXepZUQAoFtF
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

data=pd.read_csv("/content/PS_20174392719_1491204439457_log.csv")
data.head()

data.info()

data.drop(["nameOrig","nameDest"],axis=1,inplace=True)

object_type=["type"]

from sklearn.preprocessing import OrdinalEncoder
oe = OrdinalEncoder().fit(data[object_type])

data[object_type] = oe.transform(data[object_type])

data.info()

data.isna().sum()

data.describe()

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
numeric_columns = ['step', 'type', 'amount', 'oldbalanceOrg', 'newbalanceOrig', 'oldbalanceDest', 'newbalanceDest']
data[numeric_columns] = scaler.fit_transform(data[numeric_columns])

from sklearn.preprocessing import MinMaxScaler
min_max_scaler = MinMaxScaler()
data[numeric_columns] = min_max_scaler.fit_transform(data[numeric_columns])

data.describe()

x=data.drop(["isFraud"],axis=1)
y=data["isFraud"]

from sklearn.model_selection import train_test_split as tts
xtrain, xtest, ytrain, ytest = tts(x,y, train_size = 0.2, random_state=42)

from sklearn.linear_model import LogisticRegression

model=LogisticRegression(random_state=42)

model.fit(xtrain,ytrain)

model.coef_

pd.DataFrame({"Column_names" : xtrain.columns,
               "M values" : model.coef_[0]})

model.intercept_

y_pred = model.predict(xtest)

pd.DataFrame({
    "ytrue" : ytest,
    "ypred" : y_pred})

y_pred = model.predict(xtest)

(y_pred == ytest).sum() / ytest.shape[0] *100

from sklearn.metrics import accuracy_score

accuracy_score(ytest, y_pred)*100

data["isFraud"].value_counts()

from sklearn.metrics import classification_report, confusion_matrix

print(classification_report(ytest, y_pred))