# -*- coding: utf-8 -*-
"""salary prediction

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IcSMU-ri8c9T3uoUGcfbuUl-tYMYjmxe
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

data=pd.read_csv("/content/SalaryMulti.csv")

data.head()

data=data.rename(columns=lambda x: x.replace(' ', '_'))

data.info()

data.head()

data.isna().sum()

data.describe()

plt.hist(data['Total_Experience'], bins=10, edgecolor='black',facecolor='violet')
plt.title('Histogram of Total Experience')
plt.xlabel('Total Experience')
plt.ylabel('Frequency')
plt.show()

sns.distplot(data.Total_Experience,kde=True)

x=data.drop('Salary', axis=1)
y=data['Salary']

from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()
x_scaled = scaler.fit_transform(x)

from sklearn.preprocessing import MinMaxScaler
minmax_scaler = MinMaxScaler()
x_normalized = minmax_scaler.fit_transform(x_scaled)

from sklearn.model_selection import train_test_split as tts
xtrain, xtest, ytrain, ytest = tts(x,y, train_size = 0.75, random_state=42)

from sklearn.linear_model import LinearRegression

model=LinearRegression()

model.fit(xtrain,ytrain)

model.coef_

model.intercept_

model.predict(xtest)

ypred = model.predict(xtest)

model.score(x,y)

from sklearn.metrics import mean_squared_error

mse = mean_squared_error(ytest, ypred)
rmse = np.sqrt(mse)
print(f"Root Mean Squared Error: {rmse}")

new_data = {
    'Total_Experience': [9],
    'Team_Lead_Experience': [4],
    'Project_Manager_Experience': [2],
    'Certifications': [5]
}

new_data = pd.DataFrame(new_data)
new_scaled = scaler.transform(new_data)
predicted_salary = model.predict(new_scaled)

print(f"Predicted Salary: {predicted_salary[0]}")